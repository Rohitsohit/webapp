{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Downloads/webapp/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageName, setImageName] = useState('');\n  const [caption, setCaption] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/predict', {\n        image_name: imageName\n      });\n      if (response.data.caption) {\n        setCaption(response.data.caption);\n      } else {\n        setCaption('No caption available');\n      }\n    } catch (error) {\n      console.error(\"There was an error predicting the caption!\", error);\n      setCaption('Error fetching caption');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Captioning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: imageName,\n        onChange: e => setImageName(e.target.value),\n        placeholder: \"Enter image name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), caption && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Caption:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rKOyR+Q4JN0a+Yxv9W/DeKgIhQA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","imageName","setImageName","caption","setCaption","handleSubmit","event","preventDefault","response","post","image_name","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/rohit/Downloads/webapp/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n  const [caption, setCaption] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/predict', {\n        image_name: imageName,\n      });\n      if (response.data.caption) {\n        setCaption(response.data.caption);\n      } else {\n        setCaption('No caption available');\n      }\n    } catch (error) {\n      console.error(\"There was an error predicting the caption!\", error);\n      setCaption('Error fetching caption');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Image Captioning</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={imageName}\n          onChange={(e) => setImageName(e.target.value)}\n          placeholder=\"Enter image name\"\n        />\n        <button type=\"submit\">Get Caption</button>\n      </form>\n      {caption && (\n        <div>\n          <h2>Caption:</h2>\n          <p>{caption}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,+BAA+B,EAAE;QACjEC,UAAU,EAAET;MACd,CAAC,CAAC;MACF,IAAIO,QAAQ,CAACG,IAAI,CAACR,OAAO,EAAE;QACzBC,UAAU,CAACI,QAAQ,CAACG,IAAI,CAACR,OAAO,CAAC;MACnC,CAAC,MAAM;QACLC,UAAU,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClER,UAAU,CAAC,wBAAwB,CAAC;IACtC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAMsB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,SAAU;QACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAkB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EACNhB,OAAO,iBACNL,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBrB,OAAA;QAAAiB,QAAA,EAAIZ;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAzCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}